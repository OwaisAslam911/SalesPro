@model SalesPro.Models.Items
@{
    ViewData["Title"] = "UnitSetup";
}
<div class="content-body">
    <div class="container-fluid">
        <div class="row justify-content-center">
            <div class="col-lg-12">
                <div class="card">
                    <div class="card-body">
                        <form itemid="CreateItems" method="post">
                            <input type="hidden" id="ItemIdHidden" />

                            <div class="row mb-3">
                                <div class="col-md-4">
                                    <label for="itemCode" class="form-label">Item Code</label>
                                    <input type="text" class="form-control" name="ItemCode" id="ItemCode" placeholder="Enter Code">
                                </div>
                                <div class="col-md-4">
                                    <label for="itemName" class="form-label">Item Name</label>
                                    <input type="text" class="form-control" id="ItemName" name="ItemName" placeholder="Enter Name">
                                </div>
                                <div class="col-md-4">
                                   <label for="itemName" class="form-label">Stock type</label>
                                    <input type="text" class="form-control" id="StockType" name="StockType" placeholder="Enter stock type">
                                </div>
                            </div>

                            <div class="row mb-3">
                                <div class="col-md-4">
                                    <label for="category" class="form-label">Category</label>
                                    <select class="form-select select2" name="CategoryId" id="Category"  asp-items="ViewBag.CategoryList">
                                        <option selected>Select Category</option>
                                    </select>
                                </div>
                                <div class="col-md-4">
                                    <label for="size" class="form-label">Size</label>
                                    <input type="text" class="form-control" id="Size" name="Size" placeholder="Enter stock size">
                                </div>
                                <div class="col-md-4">
                                    <label for="brand" class="form-label">Brand</label>
                                    <select class="form-select select2" id="Brand" name="BrandId" asp-items="ViewBag.BrandList">
                                        <option selected>Select Brand</option>
                                    </select>
                                </div>
                            </div>

                            <div class="row mb-3">
                                <div class="col-md-4">
                                    <label for="packing" class="form-label">Packing</label>
                                    <input type="text" class="form-control" id="Packing" name="Packing" placeholder="Enter Packing">
                                </div>
                                <div class="col-md-4">
                                    <label for="sellingPrice" class="form-label">Selling Price</label>
                                    <input type="text" class="form-control" id="SellingPrice" name="SellingPrice" placeholder="Selling Price">
                                </div>
                                <div class="col-md-4">
                                    <label for="openingBalance" class="form-label">Opening Balance</label>
                                    <input type="text" class="form-control" id="OpeningBalance" name="OpeningBalance" placeholder="Enter Opening Balance">
                                </div>
                            </div>

                            <div class="row mb-3">
                                <div class="col-md-3">
                                    <label for="uom" class="form-label">UOM</label>
                                    <select class="form-select select2" id="uom" name="UnitId" asp-items="ViewBag.UnitList">
                                        <option selected>Select Unit of Measurment</option>
                                    </select>
                                </div>
                                <div class="col-md-3">
                                    <label for="costPrice" class="form-label">Cost Price</label>
                                    <input type="text" class="form-control" id="CostPrice" name="CostPrice" placeholder="Cost Price">
                                </div>
                                <div class="col-md-3">
                                    <label for="amount" class="form-label">Amount</label>
                                    <div class="input-group">
                                        <span class="input-group-text">$</span>
                                        <input type="text" class="form-control" id="Amount" name="Amount" value="0.00">
                                    </div>
                                </div>
                            </div>
                                <div class="col-md-3 d-flex align-items-end">
                                    <button id="SaveItem" class="btn btn-primary w-100">Save Item</button>
                                    <button id="UpdateItem" class="btn btn-success w-100 d-none">Update Item</button>
                                </div>
                        </form>
                    </div>
                </div>
            </div>
        </div>

        <div class="row">
            <div class="col-12">
                <div class="card">
                    <div class="card-body">
                        <h4 class="card-title">Data Table</h4>
                        <div class="table-responsive">
                            <table class="table table-striped table-bordered zero-configuration">
                                <thead>
                                    <tr>
                                        <th> Id</th>
                                        <th>Item Code</th>
                                        <th>Item Name</th>
                                        <th>Stock Type</th>
                                        <th>Category</th>
                                        <th>Size</th>
                                        <th>Brand</th>
                                        <th>Packing</th>
                                        <th>Sale price</th>
                                        <th>Quantity</th>
                                        <th>Unit</th>
                                        <th>Cost price</th>
                                        <th>Amount</th>
                                        <th>Actions</th>
                                    </tr>
                                </thead>
                                <tbody id="ItemTableBody">
                                    <!-- New rows will be added here -->
                                </tbody>
                                <tfoot>
                                    <tr>
                                        <th> Id</th>
                                        <th>Item Code</th>
                                        <th>Item Name</th>
                                        <th>Stock Type</th>
                                        <th>Category</th>
                                        <th>Size</th>
                                        <th>Brand</th>
                                        <th>Packing</th>
                                        <th>Sale price</th>
                                        <th>Quantity</th>
                                        <th>Unit</th>
                                        <th>Cost price</th>
                                        <th>Amount</th>
                                        <th>Actions</th>

                                    </tr>
                                </tfoot>
                            </table>
                        </div>
                    </div>
                </div>
            </div>

        </div>
    </div>
</div>

@section Scripts {

    <script src="~/js/Toastify.js"></script>
    <script>
        $(document).ready(function () {
            $('.select2').select2();
            LoadItems(); // When page loads, fetch all categories
        });

        $("#SaveItem").click(function (event) {
            event.preventDefault();
            SaveItem();
        });
        $("#UpdateItem").click(function (event) {
            event.preventDefault();
            UpdateItem();
        });

        function SaveItem() {
            event.preventDefault();

            var ItemCode = $("#ItemCode").val();
            var ItemName = $("#ItemName").val();
            var StockType = $("#StockType").val();
            var Category = $("#Category").val();
            var Size = $("#Size").val();
            var Brand = $("#Brand").val();
            var Packing = $("#Packing").val();
            var SellingPrice = $("#SellingPrice").val();
            var OpeningBalance = $("#OpeningBalance").val();
            var uom = $("#uom").val();
            var CostPrice = $("#CostPrice").val();
            var Amount = $("#Amount").val();

            if (ItemCode == null || ItemCode == "") {
                showToastifyMessage("Please Enter Item Code", 'error');
            } else if (ItemName == "" || ItemName == null) {
                showToastifyMessage("Please Enter Item Name", 'error');
            } else if (StockType == null || StockType == "") {
                showToastifyMessage("Please Enter Stock Type", 'error');
            } else if (Category == null || Category == "") {
                showToastifyMessage("Please Select Category", 'error');
            } else if (Size == null || Size == "") {
                showToastifyMessage("Please enter Size", 'error');
            } else if (Brand == null || Brand == "") {
                showToastifyMessage("Please Select Brand", 'error');
            } else if (Packing == null || Packing == "") {
                showToastifyMessage("Please enter Packing", 'error');
            } else if (SellingPrice == null || SellingPrice == "") {
                showToastifyMessage("Please enter Selling Price", 'error');
            } else if (OpeningBalance == null || OpeningBalance == "") {
                showToastifyMessage("Please enter Opening Balance", 'error');
            } else if (uom == null || uom == "") {
                showToastifyMessage("Please enter Unit of Measurement", 'error');
            } else if (CostPrice == null || CostPrice == "") {
                showToastifyMessage("Please enter Cost Price", 'error');
            } else if (Amount == null || Amount == "") {
                showToastifyMessage("Please enter Amount", 'error');
            } else {
                var saveItems = {
                    ItemCode: $("#ItemCode").val(),
                    ItemName: $("#ItemName").val(),
                    StockType: $("#StockType").val(),
                    CategoryId: $("#Category").val(),
                    Size: $("#Size").val(),
                    BrandId: $("#Brand").val(),
                    Packing: $("#Packing").val(),
                    SellingPrice: $("#SellingPrice").val(),
                    OpeningBalance: $("#OpeningBalance").val(),
                    UnitId: $("#uom").val(),
                    CostPrice: $("#CostPrice").val(),
                    Amount: $("#Amount").val()
                 
                };
                debugger;
                console.log(saveItems);
                $.ajax({
                    type: "POST",
                    url: "@Url.Action("SaveItem", "InventrySetup")",
                    contentType: "application/json",
                    data: JSON.stringify(saveItems),
                    success: function (response) {
                        if (response.success) {
                            showToastifyMessage('Category saved successfully!', 'success');

                            LoadItems();
                            // ✅ Clear the form fields
                            $("#ItemCode").val('');
                            $("#ItemName").val('');
                            $("#StockType").val('');
                            $("#Size").val('');
                            $("#BrandId").val('');
                            $("#Packing").val('');
                            $("#OpeningBalance").val('');
                            $("#SellingPrice").val('');
                            $("#UnitId").val('');
                            $("#CostPrice").val('');
                            $("#Amount").val('');
                        } else {
                            showToastifyMessage('Error saving category.', 'error');
                        }
                    },
                    error: function () {
                        showToastifyMessage('Error occurred while saving the category.', 'error');
                    }
                });
            }
        }

        function LoadItems() {
            // debugger;
            $.ajax({
                type: "GET",
                url: "@Url.Action("GetItems", "InventrySetup")", // new action
                success: function (response) {
                    $("#ItemTableBody").empty(); // Clear previous rows if any
                    debugger;
                    $.each(response, function (index, items) {
                        var newRow = `
                                                    <tr>
                                                                <td>${items.ItemId}</td>
                                                                <td>${items.ItemCode}</td>
                                                                <td>${items.ItemName}</td>
                                                                <td>${items.StockType}</td>
                                                                <td>${items.CategoryName}</td>
                                                                <td>${items.Size}</td>
                                                                <td>${items.BrandName}</td>
                                                                <td>${items.Packing}</td>
                                                                <td>${items.SellingPrice}</td>
                                                                <td>${items.OpeningBalance}</td>
                                                                <td>${items.UnitName}</td>
                                                                <td>${items.CostPrice}</td>
                                                                <td>${items.Amount}</td>

                                                                <td>
                                                                           <div>
                                                                               <button type="submit" onclick="editItem(${items.ItemId})" class="btn btn-primary">edit</button>
                                                                                       <button type="submit" onclick="deleteItem(${items.ItemId})" class="btn btn-danger">Delete</button>

                                                                            </div>
                                                                </td>
                                                    </tr>
                                                `;
                        $("#ItemTableBody").append(newRow);
                    });
                },
                error: function () {
                    showToastifyMessage('Failed to load categories.', 'error');
                }
            });
        }
        function editItem(ItemId) {
            $("#SaveItem").hide();
            $("#UpdateItem").removeClass("d-none").show();

            var row = $("#ItemTableBody").find("tr").filter(function () {
                return $(this).find("td:first").text().trim() == ItemId;
            });

            var itemCode = row.find("td:nth-child(2)").text().trim();
            var itemName = row.find("td:nth-child(3)").text().trim();
            var stockType = row.find("td:nth-child(4)").text().trim();
            var categoryText = row.find("td:nth-child(5)").text().trim();
            var size = row.find("td:nth-child(6)").text().trim();
            var brandText = row.find("td:nth-child(7)").text().trim();
            var packing = row.find("td:nth-child(8)").text().trim();
            var sellingPrice = row.find("td:nth-child(9)").text().trim();
            var openingBalance = row.find("td:nth-child(10)").text().trim();
            var uomText = row.find("td:nth-child(11)").text().trim();
            var costPrice = row.find("td:nth-child(12)").text().trim();
            var amount = row.find("td:nth-child(13)").text().trim();

            $("#ItemCode").val(itemCode);
            $("#ItemName").val(itemName);
            $("#StockType").val(stockType);
            $("#Size").val(size);
            $("#Packing").val(packing);
            $("#SellingPrice").val(sellingPrice);
            $("#OpeningBalance").val(openingBalance);
            $("#CostPrice").val(costPrice);
            $("#Amount").val(amount);
            $("#ItemIdHidden").val(ItemId);

          
            var categoryVal = $("#Category option").filter(function () {
                return $(this).text().trim() === categoryText;
            }).val();
            $("#Category").val(categoryVal).trigger('change');
            var brandVal = $("#Brand option").filter(function () {
                return $(this).text().trim() === brandText;
            }).val();
            $("#Brand").val(brandVal).trigger('change'); 
            var uomVal = $("#uom option").filter(function () {
                return $(this).text().trim() === uomText;
            }).val();
            $("#uom").val(uomVal).trigger('change');
        }

        

        function UpdateItem() {
            event.preventDefault();

            var ItemCode = $("#ItemCode").val();
            var ItemName = $("#ItemName").val();
            var StockType = $("#StockType").val();
            var Category = $("#Category").val();
            var Size = $("#Size").val();
            var Brand = $("#Brand").val();
            var Packing = $("#Packing").val();
            var SellingPrice = $("#SellingPrice").val();
            var OpeningBalance = $("#OpeningBalance").val();
            var uom = $("#uom").val();
            var CostPrice = $("#CostPrice").val();
            var Amount = $("#Amount").val();

            if (ItemCode == null || ItemCode == "") {
                showToastifyMessage("Please Enter Item Code", 'error');
            } else if (ItemName == "" || ItemName == null) {
                showToastifyMessage("Please Enter Item Name", 'error');
            } else if (StockType == null || StockType == "") {
                showToastifyMessage("Please Enter Stock Type", 'error');
            } else if (Category == null || Category == "") {
                showToastifyMessage("Please Select Category", 'error');
            } else if (Size == null || Size == "") {
                showToastifyMessage("Please enter Size", 'error');
            } else if (Brand == null || Brand == "") {
                showToastifyMessage("Please Select Brand", 'error');
            } else if (Packing == null || Packing == "") {
                showToastifyMessage("Please enter Packing", 'error');
            } else if (SellingPrice == null || SellingPrice == "") {
                showToastifyMessage("Please enter Selling Price", 'error');
            } else if (OpeningBalance == null || OpeningBalance == "") {
                showToastifyMessage("Please enter Opening Balance", 'error');
            } else if (uom == null || uom == "") {
                showToastifyMessage("Please enter Unit of Measurement", 'error');
            } else if (CostPrice == null || CostPrice == "") {
                showToastifyMessage("Please enter Cost Price", 'error');
            } else if (Amount == null || Amount == "") {
                showToastifyMessage("Please enter Amount", 'error');
            } else { 
                debugger;
               
                var updateItems = {
                    ItemCode: $("#ItemCode").val(),
                    ItemName: $("#ItemName").val(),
                    StockType: $("#StockType").val(),
                    CategoryId: $("#Category").val(),
                    Size: $("#Size").val(),
                    BrandId: $("#Brand").val(),
                    Packing: $("#Packing").val(),
                    SellingPrice: $("#SellingPrice").val(),
                    OpeningBalance: $("#OpeningBalance").val(),
                    UnitId: $("#uom").val(),
                    CostPrice: $("#CostPrice").val(),
                    Amount: $("#Amount").val()
                };

                $.ajax({
                    type: "POST",
                    url: "/InventrySetup/UpdateItem",
                    contentType: "application/json",
                    data: JSON.stringify(updateItems),
                    success: function (response) {
                        if (response.success) {
                            showToastifyMessage('Item updated successfully!', 'success');
                            LoadItems();
                            debugger;
                                // Reset Select2 dropdowns

                            $("#Category").val('');
                            $("#Category").trigger('change');

                            $("#Brand").val('');
                            $("#Brand").trigger('change');

                            $("#uom").val('');
                            $("#uom").trigger('change');
                                // $("#Category").val('').trigger('change');
                            $("#ItemCode").val('');
                            $("#ItemName").val('');
                            $("#StockType").val('');
                            $("#Size").val('');
                            // $("#BrandId").val('').trigger('change');
                            $("#Packing").val('');
                            $("#OpeningBalance").val('');
                            $("#SellingPrice").val('');
                            // $("#uom").val('').trigger('change');
                            $("#CostPrice").val('');
                            $("#Amount").val('');
                            $("#ItemIdHidden").val('');
                            $("#updateCategory").addClass("d-none").hide();
                            $("#SaveCategory").show();
                        } else {
                            showToastifyMessage('Error updating category.', 'error');
                        }
                    },
                    error: function () {
                        showToastifyMessage('Error occurred while updating category.', 'error');
                    }
                });
            }
        }


        function deleteItem(ItemId) {
            if (confirm('Are you sure you want to delete this Item?')) {
                $.post('@Url.Action("DeleteItem", "InventrySetup")', { ItemId: ItemId }, function (response) {
                    if (response.success) {
                        LoadItems();

                    } else {
                        alert("Error Deleting Item");
                    }
                });
            }
        }
    </script>
}