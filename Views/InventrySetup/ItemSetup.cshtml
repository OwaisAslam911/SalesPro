@model SalesPro.Models.Units
@{
    ViewData["Title"] = "UnitSetup";
}
<div class="content-body">
    <div class="container-fluid">
        <div class="row justify-content-center">
            <div class="col-lg-12">
                <div class="card">
                    <div class="card-body">
                        <form itemid="CreateBrands" method="post">
                            <input type="hidden" id="BrandIdHidden" />

                            <div class="form-validation">
                                <div class="form-group row">
                                    <label class="form-label col-lg-12" for="val-username">
                                        Brand Code <span class="text-danger">*</span>
                                    </label>
                                    <div class="col-lg-12">
                                        <input type="text" class="form-control" id="BrandCode" name="BrandCode" placeholder="Enter a Brand Code..">
                                    </div>
                                </div>
                                <div class="form-group row">
                                    <label class="form-label col-lg-12" for="val-username">
                                        Brand Name <span class="text-danger">*</span>
                                    </label>
                                    <div class="col-lg-12">
                                        <input type="text" class="form-control" id="BrandName" name="BrandName" placeholder="Enter a Brand Name..">
                                    </div>
                                </div>

                                <div class="form-group row">
                                    <div class="col-lg-8 ml-auto">
                                        <button onclick="SaveBrand()" id="SaveBrand" class="btn btn-primary">Save Brand</button>
                                        <button onclick="UpdateBrand()" id="UpdateBrand" class="btn btn-success d-none ">Update Brand</button>
                                    </div>
                                </div>
                            </div>
                        </form>
                    </div>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-12">
                <div class="card">
                    <div class="card-body">
                        <h4 class="card-title">Data Table</h4>
                        <div class="table-responsive">
                            <table class="table table-striped table-bordered zero-configuration">
                                <thead>
                                    <tr>
                                        <th>Brand Id</th>
                                        <th>Brand Code</th>
                                        <th>Bramd Name</th>
                                        <th>Actions</th>
                                    </tr>
                                </thead>
                                <tbody id="BrandTableBody">
                                    <!-- New rows will be added here -->
                                </tbody>
                                <tfoot>
                                    <tr>
                                        <th>Brand Id</th>
                                        <th>Brand Code</th>
                                        <th>Bramd Name</th>
                                        <th>Actions</th>

                                    </tr>
                                </tfoot>
                            </table>
                        </div>
                    </div>
                </div>
            </div>

        </div>
    </div>
</div>

@section Scripts {

    <script src="~/js/Toastify.js"></script>
    <script>
        $(document).ready(function () {
            LoadBrands(); // When page loads, fetch all categories
        });



        function SaveBrand() {
            event.preventDefault();

            var CategoryCode = $("#CategoryCode").val();
            var CategoryName = $("#CategoryName").val();
            var CategoryAbbrevation = $("#CategoryAbbrevation").val();

            if (CategoryCode == null || CategoryCode == "") {
                showToastifyMessage("Please Enter Category Code", 'error');
            } else if (CategoryName == "" || CategoryName == null) {
                showToastifyMessage("Please Enter Category Name", 'error');
            } else if (CategoryAbbrevation == null || CategoryAbbrevation == "") {
                showToastifyMessage("Please Enter Category Abbreviation", 'error');
            } else {
                var saveItems = {
                    CategoryCode: CategoryCode,
                    CategoryName: CategoryName,
                    Abbreviation: CategoryAbbrevation
                };

                $.ajax({
                    type: "POST",
                    url: "@Url.Action("SaveCategory", "InventrySetup")",
                    contentType: "application/json",
                    data: JSON.stringify(saveItems),
                    success: function (response) {
                        if (response.success) {
                            showToastifyMessage('Category saved successfully!', 'success');

                            loadCategories();
                            // ✅ Clear the form fields
                            $("#CategoryCode").val('');
                            $("#CategoryName").val('');
                            $("#CategoryAbbrevation").val('');
                        } else {
                            showToastifyMessage('Error saving category.', 'error');
                        }
                    },
                    error: function () {
                        showToastifyMessage('Error occurred while saving the category.', 'error');
                    }
                });
            }
        }

        function LoadBrands() {
            // debugger;
            $.ajax({
                type: "GET",
                url: "@Url.Action("GetBrands", "InventrySetup")", // new action
                success: function (response) {
                    $("#BrandTableBody").empty(); // Clear previous rows if any

                    $.each(response, function (index, brand) {
                        var newRow = `
                                                    <tr>
                                                                <td>${brand.BrandId}</td>
                                                                <td>${brand.BrandName}</td>
                                                                <td>${brand.BrandCode}</td>

                                                                <td>
                                                                           <div>
                                                                                       <button type="submit" onclick="editBrand(${brand.BrandId})" class="btn btn-primary">edit</button>
                                                                               <button type="submit" onclick="deleteBrand(${brand.BrandId})" class="btn btn-danger">Delete</button>

                                                                            </div>
                                                                </td>
                                                    </tr>
                                                `;
                        $("#categoryTableBody").append(newRow);
                    });
                },
                error: function () {
                    showToastifyMessage('Failed to load categories.', 'error');
                }
            });
        }
        function editBrand(CategoryId) {
            $("#SaveCategory").hide();
            $("#updateCategory").removeClass("d-none").show();

            // 🔥 Find the row where this CategoryId exists
            var row = $("#categoryTableBody").find("tr").filter(function () {
                return $(this).find("td:first").text() == CategoryId;
            });

            // ✅ Get values from that row
            var categoryCode = row.find("td:nth-child(2)").text();
            var categoryName = row.find("td:nth-child(3)").text();
            var categoryAbbreviation = row.find("td:nth-child(4)").text();

            // ✅ Put those values into the input fields
            $("#CategoryCode").val(categoryCode);
            $("#CategoryName").val(categoryName);
            $("#CategoryAbbrevation").val(categoryAbbreviation);

            // Optional: Store the CategoryId somewhere (hidden field) for updating
            $("#CategoryIdHidden").val(CategoryId);
        }

        function UpdateBrand() {
            event.preventDefault();

            var CategoryCode = $("#CategoryCode").val();
            var CategoryName = $("#CategoryName").val();
            var CategoryAbbrevation = $("#CategoryAbbrevation").val();

            if (CategoryCode == null || CategoryCode == "") {
                showToastifyMessage("Please Enter Category Code", 'error');
            } else if (CategoryName == "" || CategoryName == null) {
                showToastifyMessage("Please Enter Category Name", 'error');
            } else if (CategoryAbbrevation == null || CategoryAbbrevation == "") {
                showToastifyMessage("Please Enter Category Abbreviation", 'error');
            } else {
                debugger;
                var CategoryId = $("#CategoryIdHidden").val();
                var CategoryCode = $("#CategoryCode").val();
                var CategoryName = $("#CategoryName").val();
                var CategoryAbbrevation = $("#CategoryAbbrevation").val();

                var updateItems = {
                    CategoryId: CategoryId,
                    CategoryCode: CategoryCode,
                    CategoryName: CategoryName,
                    Abbreviation: CategoryAbbrevation
                };

                $.ajax({
                    type: "POST",
                    url: "/InventrySetup/UpdateBrand",
                    contentType: "application/json",
                    data: JSON.stringify(updateItems),
                    success: function (response) {
                        if (response.success) {
                            showToastifyMessage('Category updated successfully!', 'success');
                            loadCategories();

                            // ✅ After update, clear fields
                            $("#CategoryCode").val('');
                            $("#CategoryName").val('');
                            $("#CategoryAbbrevation").val('');
                            $("#CategoryIdHidden").val('');

                            // ✅ Switch buttons back
                            $("#updateCategory").addClass("d-none").hide();
                            $("#SaveCategory").show();
                        } else {
                            showToastifyMessage('Error updating category.', 'error');
                        }
                    },
                    error: function () {
                        showToastifyMessage('Error occurred while updating category.', 'error');
                    }
                });
            }
        }


        function deleteBrand(BrandId) {
            if (confirm('Are you sure you want to delete this Item?')) {
                $.post('@Url.Action("DeleteBrand", "InventrySetup")', { BrandId: BrandId }, function (response) {
                    if (response.success) {
                        LoadBrands();

                    } else {
                        alert("Error Deleting Categories");
                    }
                });
            }
        }
    </script>
}